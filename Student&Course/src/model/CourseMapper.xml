<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="model.CourseMapper">
 	<insert id="add" parameterType="model.Course" useGeneratedKeys="true" keyProperty="id">
 		insert into course
 		(
 			tid,
 			name,
 			type,
 			hours	
 		)
 		values
 		(
 			#{teacher.id},
 			#{name},
 			#{type},
 			#{hours}	
 		)
 	</insert>
 	
 	<!-- 查询单项 -->
 	<select id="getone" resultType="model.Course">
 		select * from course where id=#{id}
 	</select>
 	<!-- 查询的信息同时包含teacher时，resultType="model.Course"不再适用 -->
 	<select id="get" parameterType="int" resultMap="c">
 		select
			sid,sname,ssex,spwd,sphone,sgrade,sphoto,
			c.id	cid,
			c.name	cname,
			c.type	ctype,
			c.hours chours
		from 
			course c
		left join
			(
			select
					s.id 	sid,
					s.name 	sname,
					s.sex  	ssex,
					s.pwd 	spwd,
					s.phone	sphone,
					s.grade sgrade,
					s.photo sphoto,
					sc.cid	sccid			
			from 
				student_course sc
			left join
				student s
			on sc.sid=s.id
			) temp
		on c.id=temp.sccid
		where c.id=#{id}
 	</select>
 	<!-- 配置resultMap -->
 	<resultMap type="model.Course" id="c">
 		<id property="id" column="cid"/>
		<result property="name" column="cname"/>
 		<result property="type" column="ctype"/>
 		<result property="hours" column="chours"/>
 		<!-- 配置与course关联的teacher -->
 		<collection property="students" ofType="model.Student">
 			<id property="id" column="sid"/>
	 		<result property="name" column="sname"/>
	 		<result property="sex" column="ssex"/>
	 		<result property="pwd" column="spwd"/>
	 		<result property="phone" column="sphone"/>
	 		<result property="grade" column="sgrade"/>
	 		<result property="photo" column="sphoto"/>
 		</collection>
 	</resultMap>
 	
 	<!-- 查询课程、学生、老师信息-->
 	<select id="gets" parameterType="int" resultMap="c2">
 		select
			cid,cname,ctype,chours,
			tid,tname,tsex,tphone,
			sid,sname,ssex,spwd,sphone,sgrade,sphoto		
		from 
			(
			select 
				c.id 		cid,
				c.name	cname,
				c.type	ctype,
				c.hours 	chours,
				t.id		tid,
				t.name 	tname,
				t.sex	tsex,
				t.phone	tphone
			from
				course c
			left join
				teacher t
			on
				c.tid=t.id
			) t1
		left join
			(
			select
					s.id 	sid,
					s.name 	sname,
					s.sex  	ssex,
					s.pwd 	spwd,
					s.phone	sphone,
					s.grade sgrade,
					s.photo sphoto,
					sc.cid	sccid			
			from 
				student_course sc
			left join
				student s
			on sc.sid=s.id
			) t2
		on t1.cid=t2.sccid
		where t1.cid=#{id}
 	</select>
 	<!-- 配置resultMap -->
 	<resultMap type="model.Course" id="c2">
 		<id property="id" column="cid"/>
		<result property="name" column="cname"/>
 		<result property="type" column="ctype"/>
 		<result property="hours" column="chours"/>
 		<association property="teacher" javaType="model.Teacher">
 			<id property="id" column="tid"/>
	 		<result property="name" column="tname"/>
	 		<result property="sex" column="tsex"/>
	 		<result property="phone" column="tphone"/>
 		</association>
 		<!-- 配置与course关联的students -->
 		<collection property="students" ofType="model.Student">
 			<id property="id" column="sid"/>
	 		<result property="name" column="sname"/>
	 		<result property="sex" column="ssex"/>
	 		<result property="pwd" column="spwd"/>
	 		<result property="phone" column="sphone"/>
	 		<result property="grade" column="sgrade"/>
	 		<result property="photo" column="sphoto"/>
 		</collection>
 	</resultMap>
 	
 	
 	<delete id="delete">
 		delete from course where id=#{id}
 	</delete>
 	
 	<update id="update1" parameterType="model.Course">
 		update course set pwd=#{pwd},grade=#{grade} where id=#{id}
 	</update>
 	<!-- 修改主表主键时，将从表contact的设计中-外键-更新时的设置为CASCADE -->
 	<update id="update2" parameterType="model.Course">
 		update course set id=#{id} where name=#{name}
 	</update>
 	
</mapper>