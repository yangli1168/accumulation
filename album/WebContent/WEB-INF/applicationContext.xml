<?xml version="1.0" encoding="UTF-8"?>
<!-- beans配置：
	1、...schema/context... -> 引入支持注解的xml命名空间
	2、...schema/aop... -> 引入支持切面类的xml命名空间
	3、...schema/tx... ->引入申明式事务支持的XML命名空间
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx
 		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
<!-- 与hibernate的整合配置[完成后可删除hibernate.cfg.xml文件和common包中的hibernateUtil类] -->	
<!--1、数据源配置（dataSource）【替换原hibernate数据库连接】  -->	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- 初始化连接数量； -->
        <property name="initialSize" value="0" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="20" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="20" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="0" />
        <!-- 最大等待时长 -->
        <property name="maxWait" value="60000" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超过时间限制多长； -->
        <property name="removeAbandonedTimeout" value="180"/>          
        <!-- 数据源连接参数配置[外部文件配置方式：dataSource.properties]； -->
        <property name="username" value="${db.username}"/>
        <property name="url" value="${db.url}"/>
        <property name="password" value="${db.password}"/>
        <property name="driverClassName" value="${db.driverClassName}"/>         
    </bean> 
	<!--读取外部属性文件【dataSource.properties】，获取数据源参数 -->
    <context:property-placeholder location="classpath:dataSource.properties"/>
	
<!--2、sessionFactory配置【取代原common的HibernateUtil类】  -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>    
        <property name="packagesToScan" value="net.xinqushi.pojo"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>
	
<!--3、配置事务管理器 -->
	 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean> 
    <!--声明式事务配置 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">            
        <tx:attributes>
	      <tx:method name="add*" propagation="REQUIRED"/>
	      <tx:method name="get*" read-only="true" propagation="REQUIRED"/>
	      <!-- 设置service实现类中check方法为只读 -->
	      <tx:method name="check*" read-only="true" propagation="REQUIRED"/>
        </tx:attributes>        
    </tx:advice>
	
<!--4、初始化HibernateTemplete  -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
   		<property name="sessionFactory" ref="sessionFactory"></property>
  	</bean>
  	
<!--5、aop切面配置  -->
	 <aop:config>
        <aop:pointcut expression="execution(* net.xinqushi.service.impl.*.* (..))" id="txPointCut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
        <aop:aspect ref="logAop">
			<aop:before method="myBefore" pointcut-ref="txPointCut"/>
			<aop:after method="myBehind" pointcut-ref="txPointCut"/>
		</aop:aspect>
    </aop:config>    
    
	<!--*** 设置aop可用注解  ***-->
	<aop:aspectj-autoproxy/>
	
	<!--*** 配置bean的初始化的注解配置方式[采用注解方式更为简便] ***-->	
	<context:annotation-config/>
	<!--配置注解方式注入时使用的扫描包 -->
	<context:component-scan base-package="net.xinqushi.dao.impl,net.xinqushi.service.impl,net.xinqushi.aop">
	</context:component-scan>	

</beans>