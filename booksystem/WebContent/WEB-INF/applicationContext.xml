<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx
 		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
 		
 	<!-- 配置bean、类如userdao的初始化的注解配置方式-->	
	<context:component-scan base-package="net.xinqushi.dao,net.xinqushi.aop"></context:component-scan>
		
	<!-- 与mybatis的整合配置[完成后可删除mybatis-config.xml文件和utility包中的mybatisutil类]-->
	<!--(1)引入申明式事务支持的XML命名空间 -->
	<!-- (2)dataSource配置(数据源配置) -->
	<!-- 配置数据源 -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
	    <!-- 初始化连接数量； -->
	    <property name="initialSize" value="0" />
	    <!-- 最大并发连接数 	-->
	    <property name="maxActive" value="20" />
	
	    <!-- 最大空闲连接数 -->
	    <property name="maxIdle" value="20" />
	    <!-- 最小空闲连接数 -->
	    <property name="minIdle" value="0" />
	    <!-- 最大等待时长 -->
	    <property name="maxWait" value="60000" />
	    <!-- 超过时间限制是否回收 -->
	    <property name="removeAbandoned" value="true" />
	    <!-- 超过时间限制多长； -->
	    <property name="removeAbandonedTimeout" value="180"/>          
	    <!-- 数据源连接参数配置； -->
	    <property name="username" value="${db.username}"/>
	    <property name="url" value="${db.url}"/>
	    <property name="password" value="${db.password}"/>
	    <property name="driverClassName" value="${db.driver}"/>
	</bean> 	
	
    <!-- (3)读取外部属性文件，获取数据源参数 -->
    <context:property-placeholder location="classpath:db.properties"/>
   
    <!-- (4)sessionFactory配置 -->
     <!-- 配置SessionFactory,id名固定，不要变更 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	 <property name="dataSource" ref="dataSource"/>    
			<!-- <property name="mapperLocations" value="classpath:config/*.xml" /> -->
<!-- 		<property name="mapperLocations">
			<list>			
				<value>classpath:config/*.xml</value>
			</list>
		</property> -->
	</bean>	
	<!-- 自动扫描mapper接口,注入sqlSessionFactory -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.xinqushi.mapper"/>
	</bean>   
	
    <!--(5)配置事务管理器 -->
  	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource"/>
  	</bean> 

	<!-- <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/> -->
  	<!-- 定义切面 -->
	<aop:config>
   	 	<aop:pointcut expression="execution(* net.xinqushi.dao.*.* (..))" id="txPointCut"/>
  		  <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
		  <!-- 设置 -->
		  <aop:aspect ref="logAop">
		  	<aop:before method="myStart" pointcut-ref="txPointCut"/>
		  	<aop:after method="myEnd" pointcut-ref="txPointCut"/>
		  </aop:aspect>
	</aop:config>
  
 	<!-- 声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">            
   		 <tx:attributes>
   		 		<!-- propagation表示事务的操作、管理方法 -->
       		  <tx:method name="isValid" propagation="REQUIRED" read-only="true"/>
        	  <tx:method name="add" propagation="REQUIRED"/>
   		 </tx:attributes>        
	</tx:advice>	
	
</beans>